basePath: /
definitions:
  models.Person:
    properties:
      age:
        type: integer
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  models.PersonInput:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
host: localhost:8081
info:
  contact: {}
  description: API для обогащения информации о человеке по имени (возраст, пол, национальность)
  title: API по людям с обогащением
  version: "1.0"
paths:
  /api/persons:
    get:
      description: Возвращает список всех людей с возможностью фильтрации по имени,
        пагинации через limit и offset
      parameters:
      - description: Фильтр по имени
        in: query
        name: name
        type: string
      - description: Лимит
        in: query
        name: limit
        type: integer
      - description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Получить всех людей
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Создает новую запись о человеке, с автоматическим обогащением данных
        (возраст, пол, национальность) по имени
      parameters:
      - description: Информация о человеке
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.PersonInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Ошибка в данных запроса
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Создание нового человека
      tags:
      - persons
  /api/persons/{id}:
    delete:
      description: Удаляет человека из базы данных по ID
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Удалено успешно
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка удаления
          schema:
            additionalProperties: true
            type: object
      summary: Удалить человека по ID
      tags:
      - persons
    get:
      description: Возвращает данные человека по его уникальному идентификатору
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties: true
            type: object
      summary: Получить человека по ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Обновляет данные человека по ID с автоматическим обогащением данных,
        если имя изменилось
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.PersonInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Ошибка в данных запроса
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties: true
            type: object
      summary: Обновить данные человека
      tags:
      - persons
swagger: "2.0"
